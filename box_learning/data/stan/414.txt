[{u'parsetree': u'(ROOT (S (VP (VB Find) (NP (NP (CD two) (NNS numbers)) (SBAR (WHNP (WP$ whose) (NN sum)) (S (VP (VBZ is) (NP (CD 14)) (SBAR (IN if) (S (NP (CD one) (NN number)) (VP (VBZ is) (NP (NP (QP (CD 3) (NNS times) (IN as) (JJ large))) (PP (IN as) (NP (DT the) (JJ other) (NN number)))))))))))) (. .)))', u'text': u'Find two numbers whose sum is 14 if one number is 3 times as large as the other number.', u'dependencies': [[u'root', u'ROOT', u'Find'], [u'num', u'numbers', u'two'], [u'dobj', u'Find', u'numbers'], [u'poss', u'sum', u'whose'], [u'nsubj', u'14', u'sum'], [u'cop', u'14', u'is'], [u'rcmod', u'numbers', u'14'], [u'mark', u'times', u'if'], [u'num', u'number', u'one'], [u'nsubj', u'times', u'number'], [u'cop', u'times', u'is'], [u'number', u'times', u'3'], [u'advcl', u'14', u'times'], [u'quantmod', u'times', u'as'], [u'quantmod', u'times', u'large'], [u'det', u'number', u'the'], [u'amod', u'number', u'other'], [u'prep_as', u'times', u'number']], u'words': [[u'Find', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'4', u'CharacterOffsetBegin': u'0', u'PartOfSpeech': u'VB', u'Lemma': u'find'}], [u'two', {u'NormalizedNamedEntityTag': u'2.0', u'Lemma': u'two', u'CharacterOffsetEnd': u'8', u'PartOfSpeech': u'CD', u'CharacterOffsetBegin': u'5', u'NamedEntityTag': u'NUMBER'}], [u'numbers', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'16', u'CharacterOffsetBegin': u'9', u'PartOfSpeech': u'NNS', u'Lemma': u'number'}], [u'whose', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'22', u'CharacterOffsetBegin': u'17', u'PartOfSpeech': u'WP$', u'Lemma': u'whose'}], [u'sum', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'26', u'CharacterOffsetBegin': u'23', u'PartOfSpeech': u'NN', u'Lemma': u'sum'}], [u'is', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'29', u'CharacterOffsetBegin': u'27', u'PartOfSpeech': u'VBZ', u'Lemma': u'be'}], [u'14', {u'NormalizedNamedEntityTag': u'14.0', u'Lemma': u'14', u'CharacterOffsetEnd': u'32', u'PartOfSpeech': u'CD', u'CharacterOffsetBegin': u'30', u'NamedEntityTag': u'NUMBER'}], [u'if', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'35', u'CharacterOffsetBegin': u'33', u'PartOfSpeech': u'IN', u'Lemma': u'if'}], [u'one', {u'NormalizedNamedEntityTag': u'1.0', u'Lemma': u'one', u'CharacterOffsetEnd': u'39', u'PartOfSpeech': u'CD', u'CharacterOffsetBegin': u'36', u'NamedEntityTag': u'NUMBER'}], [u'number', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'46', u'CharacterOffsetBegin': u'40', u'PartOfSpeech': u'NN', u'Lemma': u'number'}], [u'is', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'49', u'CharacterOffsetBegin': u'47', u'PartOfSpeech': u'VBZ', u'Lemma': u'be'}], [u'3', {u'NormalizedNamedEntityTag': u'3.0', u'Lemma': u'3', u'CharacterOffsetEnd': u'51', u'PartOfSpeech': u'CD', u'CharacterOffsetBegin': u'50', u'NamedEntityTag': u'NUMBER'}], [u'times', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'57', u'CharacterOffsetBegin': u'52', u'PartOfSpeech': u'NNS', u'Lemma': u'time'}], [u'as', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'60', u'CharacterOffsetBegin': u'58', u'PartOfSpeech': u'IN', u'Lemma': u'as'}], [u'large', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'66', u'CharacterOffsetBegin': u'61', u'PartOfSpeech': u'JJ', u'Lemma': u'large'}], [u'as', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'69', u'CharacterOffsetBegin': u'67', u'PartOfSpeech': u'IN', u'Lemma': u'as'}], [u'the', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'73', u'CharacterOffsetBegin': u'70', u'PartOfSpeech': u'DT', u'Lemma': u'the'}], [u'other', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'79', u'CharacterOffsetBegin': u'74', u'PartOfSpeech': u'JJ', u'Lemma': u'other'}], [u'number', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'86', u'CharacterOffsetBegin': u'80', u'PartOfSpeech': u'NN', u'Lemma': u'number'}], [u'.', {u'NamedEntityTag': u'O', u'CharacterOffsetEnd': u'87', u'CharacterOffsetBegin': u'86', u'PartOfSpeech': u'.', u'Lemma': u'.'}]]}]
